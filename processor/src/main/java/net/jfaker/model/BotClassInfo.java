package net.jfaker.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Class to represent a bot class will be generated
 */
public class BotClassInfo extends ClassInfo{

    private final BotSuperClassInfo botSuperClassInfo;
    private final FakerPropertyInfo faker;
    private final List<PropertyInfo> properties;
    private final List<SetterBuilderMethodInfo> settersBuilder;
    private final ClassInfo generatedClass;
    private final BuildMethodInfo buildMethodInfo;

    public static BotClassInfoBuilder builder(){
        return new BotClassInfoBuilder();
    }

    /**
     * BotClassInfo constructor
     * @param packageName package where bot will be generated
     * @param simpleName bot name
     * @param botSuperClassInfo class who bot will be inherited
     * @param faker faker who will provider random data to bot
     * @param properties internal properties of builder
     * @param settersBuilder methods used to change default value used in bot
     * @param generatedClass class will be generated by bot
     * @param buildMethodInfo class with strategy to build instance in build method
     */
    private BotClassInfo(final String packageName,
                         final String simpleName,
                         final BotSuperClassInfo botSuperClassInfo,
                         final FakerPropertyInfo faker,
                         final List<PropertyInfo> properties,
                         final List<SetterBuilderMethodInfo> settersBuilder,
                         final ClassInfo generatedClass,
                         final BuildMethodInfo buildMethodInfo) {
        super(packageName, simpleName);
        this.botSuperClassInfo = botSuperClassInfo;
        this.faker = faker;
        this.properties = properties;
        this.settersBuilder = settersBuilder;
        this.generatedClass = generatedClass;
        this.buildMethodInfo = buildMethodInfo;

    }

    public BotSuperClassInfo getBotSuperClassInfo() {
        return botSuperClassInfo;
    }

    public FakerPropertyInfo getFaker() {
        return faker;
    }

    public List<PropertyInfo> getProperties() {
        return properties;
    }

    public List<SetterBuilderMethodInfo> getSettersBuilder() {
        return settersBuilder;
    }

    public ClassInfo getGeneratedClass() {
        return generatedClass;
    }

    public BuildMethodInfo getBuildMethodInfo() {
        return buildMethodInfo;
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) return true;
        if (!(o instanceof BotClassInfo that)) return false;
        if (!super.equals(o)) return false;
        return Objects.equals(botSuperClassInfo, that.botSuperClassInfo) &&
                Objects.equals(faker, that.faker) &&
                Objects.equals(properties, that.properties) &&
                Objects.equals(settersBuilder, that.settersBuilder) &&
                Objects.equals(generatedClass, that.generatedClass);
    }

    @Override
    public int hashCode() {
        return Objects.hash(super.hashCode(), botSuperClassInfo, faker, properties, settersBuilder, generatedClass);
    }

    @Override
    public String toString() {
        return "BotClassInfo{" +
                super.toString() +
                ", botSuperClassInfo=" + botSuperClassInfo +
                ", faker=" + faker +
                ", properties=" + properties +
                ", settersBuilder=" + settersBuilder +
                ", generatedClass=" + generatedClass +
                '}';
    }


    /**
     * Builder class
     */
    public static final class BotClassInfoBuilder {

        private String packageName;
        private String simpleName;
        private BotSuperClassInfo botSuperClassInfo;
        private FakerPropertyInfo faker;
        private final List<PropertyInfo> properties = new ArrayList<>();
        private final List<SetterBuilderMethodInfo> settersBuilder = new ArrayList<>();
        private ClassInfo generatedClass;
        private BuildMethodInfo buildMethodInfo;

        public BotClassInfoBuilder withPackageName(final String packageName) {
            this.packageName = packageName;
            return this;
        }

        public BotClassInfoBuilder withSimpleName(final String simpleName) {
            this.simpleName = simpleName;
            return this;
        }

        public BotClassInfoBuilder withBotSuperClassInfo(final BotSuperClassInfo botSuperClassInfo) {
            this.botSuperClassInfo = botSuperClassInfo;
            return this;
        }

        public BotClassInfoBuilder withFaker(final FakerPropertyInfo faker) {
            this.faker = faker;
            return this;
        }

        public BotClassInfoBuilder withProperties(final List<PropertyInfo> properties){
            this.properties.addAll(properties);
            return this;
        }

        public BotClassInfoBuilder withProperty(final PropertyInfo property){
            this.properties.add(property);
            return this;
        }

        public BotClassInfoBuilder withSetterBuilder(final List<SetterBuilderMethodInfo> setterBuilder){
            this.settersBuilder.addAll(setterBuilder);
            return this;
        }

        public BotClassInfoBuilder withSetterBuilder(final SetterBuilderMethodInfo setterBuilder){
            this.settersBuilder.add(setterBuilder);
            return this;
        }

        public BotClassInfoBuilder withGeneratedClass(final ClassInfo generatedClass) {
            this.generatedClass = generatedClass;
            return this;
        }

        public BotClassInfoBuilder withBuildMethodInfo(final BuildMethodInfo buildMethodInfo) {
            this.buildMethodInfo = buildMethodInfo;
            return this;
        }


        public BotClassInfo build() {
            return new BotClassInfo(
                    packageName,
                    simpleName,
                    botSuperClassInfo,
                    faker,
                    properties,
                    settersBuilder,
                    generatedClass,
                    buildMethodInfo
            );
        }

    }
}
