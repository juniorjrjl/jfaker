package net.jfaker.annotation;

import net.jfaker.model.BuilderInstantiateMethod;

import static net.jfaker.model.BuilderInstantiateMethod.STATIC_METHOD_CLASS;

/**
 * configuration for create instance inside of bot using builder strategy.
 * for {@link  net.jfaker.model.BuilderInstantiateMethod BuilderInstantiateMethod#STATIC_METHOD_CLASS}
 * <pre>{@code
 *     public User build(){
 *         return User.builder()
 *                    .withName(name.get())
 *                    .withEmail(email.get())
 *                    .build();
 *     }
 * }</pre>
 *
 * or
 * for {@link  net.jfaker.model.BuilderInstantiateMethod BuilderInstantiateMethod#DIRECT_INSTANTIATE}
 * <pre>{@code
 *     public User build(){
 *         var builder = new User.UserBuilder(); //or var builder = new UserBuilder();
 *         builder.withName(name.get());
 *         builder.withEmail(email.get());
 *         return builder.build();
 *     }
 * }</pre>
 */
public @interface BuilderStrategy {

    /**
     * specify strategy to create a builder class:
     * {@link  net.jfaker.model.BuilderInstantiateMethod BuilderInstantiateMethod#STATIC_METHOD_CLASS}
     * if your target class have a non args and static method do create a builder ex.: User.builder()
     * {@link  net.jfaker.model.BuilderInstantiateMethod BuilderInstantiateMethod#DIRECT_INSTANTIATE}
     * if you want to use your builder class direct with no args constructor ex.: new User.UserBuilder(), new UserBuilder(),
     */
    BuilderInstantiateMethod instantiateMethod() default STATIC_METHOD_CLASS;

    /**
     * a qualifiedName of builder class ex.: com.model.User.UserBuilder; com.model.builder.UserBuilder
     */
    String builderQualifiedName() default "";

    /**
     * if a builder class is same class file another one, if your strategy is
     * {@link  net.jfaker.model.BuilderInstantiateMethod BuilderInstantiateMethod#STATIC_METHOD_CLASS}
     * you can ignore this configuration
     */
    boolean builderClassIsInner() default true;

    /**
     * and if you set in builderStrategyInstantiateMethod {@link  net.jfaker.model.BuilderInstantiateMethod BuilderInstantiateMethod#STATIC_METHOD_CLASS}
     * a static no args method in your target class who returns builder instance
     */
    String staticBuilderInvocation() default "builder()";

    /**
     * if your methods used to set value on builder properties have a prefix, input prefix here. ex.: with
     */
    String prefixMethods() default "with";

    /**
     * a build method in builder used to generate new instances of target class
     */
    String buildMethod() default "build()";

    /**
     * If you need some specific field using another provider or bot instance do set in a prop you can use this configuration
     */
    FieldConfiguration[] fieldsConfiguration() default {};

    /**
     * Array of String with fields generated by default null value when instance is generated
     */
    String[] fieldsInitNull() default "";

    /**
     * Array of String with fields will be ignored in Bot creation
     */
    String[] methodsToIgnore() default "";

    /**
     * NO USE THIS CONFIG ! He is used for ignore all configs defined in this annotation.
     */
    boolean ignoreConfig() default false;

}
